services:
    shop-api:
        build:
            context: ./docker/php
            dockerfile: Dockerfile
        container_name: ${APP_CONTAINER_NAME}
        volumes:
            - .:/var/www/html
        working_dir: /var/www/html
        environment:
            - HOME=/var/www
            - COMPOSER_HOME=/var/www/.composer
        depends_on:
            - mysql
        healthcheck:
            test: [ "CMD-SHELL", "php-fpm --test || exit 1" ]
            interval: 30s
            timeout: 10s
            retries: 3
        restart: always
        extra_hosts:
            - "host.docker.internal:host-gateway"
        networks:
            - shop_network

    nginx:
        image: nginx:1.27
        container_name: ${NGINX_CONTAINER_NAME}
        ports:
            - "${NGINX_PORT}:80"
        volumes:
            - .:/var/www/html
            - ./docker/nginx/default.conf:/etc/nginx/conf.d/default.conf
        healthcheck:
            test: [ "CMD-SHELL", "curl -f http://localhost/up || exit 1" ]
            interval: 30s
            timeout: 10s
            retries: 3
        depends_on:
            - shop-api
        restart: always
        networks:
            - shop_network

    mysql:
        image: mysql:8.4
        container_name: ${MYSQL_CONTAINER_NAME}
        ports:
            - "${MYSQL_PORT}:3306"
        environment:
            MYSQL_DATABASE: ${DB_DATABASE}
            MYSQL_USER: ${DB_USERNAME}
            MYSQL_PASSWORD: ${DB_PASSWORD}
            MYSQL_ROOT_PASSWORD: ${DB_ROOT_PASSWORD}
        volumes:
            - mysql_data:/var/lib/mysql
        restart: always
        networks:
            - shop_network

volumes:
    mysql_data:

networks:
    shop_network:
        driver: bridge
